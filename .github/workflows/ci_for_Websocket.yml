name: Deploy Websocket dev

on:
  push:
    branches:
      - develop
    paths: ['lambda/Websocket/**']

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest 
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      # Use github defaut action to trigger action in this repo. Mandatory
      # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/configuring-a-workflow#using-the-checkout-action
      - uses: actions/checkout@v3
      - name: Use node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Delete Files
        run: |
          rm -rf tf
          rm README.md
          rm .gitignore
#       - name:
#           env setting
#         run: |
#           echo "ENDPOINT_URL=$(aws lambda get-function-url-config --function-name websocket-app-dev-publish | jq .FunctionUrl -r)}" >> $GITHUB_ENV
#           echo "${{ env.ENDPOINT_URL }}"

      - name:  
          serverless deploy
        run: |
          npm install -g serverless
          npm install -g serverless-dotenv-plugin
          serverless config credentials --provider aws --key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          cp -r lambda/Websocket/* ./
          npm install
          ls -all
          export ENDPOINT_URL=$(aws lambda get-function-url-config --function-name websocket-app-dev-publish | jq .FunctionUrl -r)
          echo $ENDPOINT_URL >> $GITHUB_ENV
          export WEBSOCKET=$(aws apigatewayv2 get-apis | jq .Items -r | jq -c '.[] | select(.Name | contains("websocket"))'.ApiEndpoint -r | sed -e "s/\$/\/dev/g")
          echo $WEBSOCKET >> $GITHUB_ENV
          export WEBSOCKET_URL=$(aws apigatewayv2 get-apis | jq .Items -r | jq -c '.[] | select(.Name | contains("websocket"))'.ApiEndpoint -r | sed 's/\wss/https/g' | sed -e "s/\$/\/dev/g")
          echo $WEBSOCKET_URL >> $GITHUB_ENV
          serverless deploy
