name: Deploy changeDeliveryStatus dev

on:
  push:
    branches:
      - develop
    paths: ['lambda/changeDeliveryStatus/**']

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
    - uses: actions/checkout@v3
    - name: Use python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Delete Files
      continue-on-error: true
      run: |
        rm -rf tf
        rm *
    - name: 
        serverless deploy
      run: |
        npm install -g serverless
        serverless create --template aws-python3
        serverless config credentials --provider aws --key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        serverless plugin install -n serverless-python-requirements
        rm serverless.yml
        rm handler.py
        cp -r lambda/changeDeliveryStatus/* ./
        rm -rf lambda
        ls -all
        serverless deploy