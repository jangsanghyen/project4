name: Deploy Websocket dev

on:
  push:
    branches:
      - develop
    paths: ['lambda/Websocket/**']

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest 
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      # Use github defaut action to trigger action in this repo. Mandatory
      # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/configuring-a-workflow#using-the-checkout-action
      - uses: actions/checkout@v3
      - name: Use node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Delete Files
        run: |
          rm -rf tf
          rm README.md
          rm .gitignore

      - name: ACTIONS_ALLOW_UNSECURE_COMMANDS
        run: echo 'ACTIONS_ALLOW_UNSECURE_COMMANDS=true' >> $GITHUB_ENV
      
      - name: env setting
        uses: chrislennon/action-aws-cli@v1.1
      # All commands after this point have access to the AWS CLI
      - run: |
      
          echo 'ENDPOINT_URL<<EOF' >> $GITHUB_ENV
          aws lambda get-function-url-config --function-name websocket-app-dev-publish | jq .FunctionUrl -r >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          
          echo 'WEBSOCKET<<EOF' >> $GITHUB_ENV
          aws apigatewayv2 get-apis | jq .Items -r | jq -c '.[] | select(.Name | contains("websocket"))'.ApiEndpoint -r | sed -e "s/\$/\/dev/g" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          
          echo 'WEBSOCKET_URL<<EOF' >> $GITHUB_ENV
          aws apigatewayv2 get-apis | jq .Items -r | jq -c '.[] | select(.Name | contains("websocket"))'.ApiEndpoint -r | sed 's/\wss/https/g' | sed -e "s/\$/\/dev/g" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          


          
          
          
#           export ENDPOINT_URL=$(aws lambda get-function-url-config --function-name websocket-app-dev-publish | jq .FunctionUrl -r)
#           echo $ENDPOINT_URL >> $GITHUB_ENV
#           export WEBSOCKET=$(aws apigatewayv2 get-apis | jq .Items -r | jq -c '.[] | select(.Name | contains("websocket"))'.ApiEndpoint -r | sed -e "s/\$/\/dev/g")
#           echo $WEBSOCKET >> $GITHUB_ENV
#           export WEBSOCKET_URL=$(aws apigatewayv2 get-apis | jq .Items -r | jq -c '.[] | select(.Name | contains("websocket"))'.ApiEndpoint -r | sed 's/\wss/https/g' | sed -e "s/\$/\/dev/g")
#           echo $WEBSOCKET_URL >> $GITHUB_ENV
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-2

      - name:  
          serverless deploy
        run: |
          npm install -g serverless
          npm install -g serverless-dotenv-plugin
          serverless config credentials --provider aws --key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          cp -r lambda/Websocket/* ./
          npm install
          ls -all
          serverless deploy
