{
  "service": {
    "service": "ChangeDeliveryStatus",
    "serviceObject": {
      "name": "ChangeDeliveryStatus"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.7",
      "region": "ap-northeast-2",
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "sns:Publish"
              ],
              "Resource": "arn:aws:sns:ap-northeast-2:889058321615:DeliveryStatusChange"
            },
            {
              "Effect": "Allow",
              "Action": [
                "es:*"
              ],
              "Resource": [
                "arn:aws:es:ap-northeast-2:889058321615:domain/delivery",
                "arn:aws:es:ap-northeast-2:889058321615:domain/delivery/*"
              ]
            }
          ]
        }
      },
      "environment": {
        "SNS_TOPIC": "arn:aws:sns:ap-northeast-2:889058321615:DeliveryStatusChange",
        "OPENSEARCH_ENDPOINT": "vpc-delivery-lf3bfa3tavqdv2mdyr6ufnabkq.ap-northeast-2.es.amazonaws.com"
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "StartDeliveryLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ChangeDeliveryStatus-dev-startDelivery"
            }
          },
          "EndDeliveryLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ChangeDeliveryStatus-dev-endDelivery"
            }
          },
          "ChangeStatusLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ChangeDeliveryStatus-dev-changeStatus"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "ChangeDeliveryStatus",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ChangeDeliveryStatus-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ChangeDeliveryStatus-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][1]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "changeStatus",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "ChangeDeliveryStatus",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                    ]
                  ]
                }
              ]
            }
          },
          "StartDeliveryLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ChangeDeliveryStatus/dev/1654163338024-2022-06-02T09:48:58.024Z/ChangeDeliveryStatus.zip"
              },
              "Handler": "handler.start",
              "Runtime": "python3.7",
              "FunctionName": "ChangeDeliveryStatus-dev-startDelivery",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "SNS_TOPIC": "arn:aws:sns:ap-northeast-2:889058321615:DeliveryStatusChange",
                  "OPENSEARCH_ENDPOINT": "vpc-delivery-lf3bfa3tavqdv2mdyr6ufnabkq.ap-northeast-2.es.amazonaws.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "StartDeliveryLogGroup"
            ]
          },
          "EndDeliveryLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ChangeDeliveryStatus/dev/1654163338024-2022-06-02T09:48:58.024Z/ChangeDeliveryStatus.zip"
              },
              "Handler": "handler.end",
              "Runtime": "python3.7",
              "FunctionName": "ChangeDeliveryStatus-dev-endDelivery",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "SNS_TOPIC": "arn:aws:sns:ap-northeast-2:889058321615:DeliveryStatusChange",
                  "OPENSEARCH_ENDPOINT": "vpc-delivery-lf3bfa3tavqdv2mdyr6ufnabkq.ap-northeast-2.es.amazonaws.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "EndDeliveryLogGroup"
            ]
          },
          "ChangeStatusLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ChangeDeliveryStatus/dev/1654163338024-2022-06-02T09:48:58.024Z/ChangeDeliveryStatus.zip"
              },
              "Handler": "handler.changeStatus",
              "Runtime": "python3.7",
              "FunctionName": "ChangeDeliveryStatus-dev-changeStatus",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "SNS_TOPIC": "arn:aws:sns:ap-northeast-2:889058321615:DeliveryStatusChange",
                  "OPENSEARCH_ENDPOINT": "vpc-delivery-lf3bfa3tavqdv2mdyr6ufnabkq.ap-northeast-2.es.amazonaws.com"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-0efd0305b11c2c102"
                ],
                "SubnetIds": [
                  "subnet-0279ce18e30904d29"
                ]
              }
            },
            "DependsOn": [
              "ChangeStatusLogGroup"
            ]
          },
          "StartDeliveryLambdaVersionEiGjNuQ1K3NydqoeONQrs243IBy1Mqdy5CYhOKRVID4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "StartDeliveryLambdaFunction"
              },
              "CodeSha256": "cJF/HusJ2cvjnwO00GUVxzQXMgyqE8MI05HeDZ6lnyk="
            }
          },
          "EndDeliveryLambdaVersion4C4DwhkkPstpOKu7VetdwgwuREdporZBHQnIa3GBaQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EndDeliveryLambdaFunction"
              },
              "CodeSha256": "cJF/HusJ2cvjnwO00GUVxzQXMgyqE8MI05HeDZ6lnyk="
            }
          },
          "ChangeStatusLambdaVersionJxnvEML46Onu8BXBhtW9yTM2vI3kA4sGQK055U7aCVg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ChangeStatusLambdaFunction"
              },
              "CodeSha256": "cJF/HusJ2cvjnwO00GUVxzQXMgyqE8MI05HeDZ6lnyk="
            }
          },
          "ChangeStatusEventSourceMappingSQSChangeStatus": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "changeStatus",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "ChangeStatusLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-ChangeDeliveryStatus",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "StartDeliveryLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "StartDeliveryLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationStartDelivery": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"StartDeliveryLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 6500
            }
          },
          "HttpApiRoutePostStart": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /start",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationStartDelivery"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationStartDelivery"
          },
          "EndDeliveryLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EndDeliveryLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationEndDelivery": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"EndDeliveryLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 6500
            }
          },
          "HttpApiRoutePostEnd": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /end",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationEndDelivery"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationEndDelivery"
          },
          "changeStatus": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "changeStatus"
            }
          },
          "SnsSubscription": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "Protocol": "sqs",
              "Endpoint": {
                "Fn::GetAtt": [
                  "changeStatus",
                  "Arn"
                ]
              },
              "TopicArn": "arn:aws:sns:ap-northeast-2:889058321615:DeliveryStatusChange"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-ChangeDeliveryStatus-dev-ServerlessDeploymentBucketName"
            }
          },
          "StartDeliveryLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "StartDeliveryLambdaVersionEiGjNuQ1K3NydqoeONQrs243IBy1Mqdy5CYhOKRVID4"
            },
            "Export": {
              "Name": "sls-ChangeDeliveryStatus-dev-StartDeliveryLambdaFunctionQualifiedArn"
            }
          },
          "EndDeliveryLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EndDeliveryLambdaVersion4C4DwhkkPstpOKu7VetdwgwuREdporZBHQnIa3GBaQ"
            },
            "Export": {
              "Name": "sls-ChangeDeliveryStatus-dev-EndDeliveryLambdaFunctionQualifiedArn"
            }
          },
          "ChangeStatusLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ChangeStatusLambdaVersionJxnvEML46Onu8BXBhtW9yTM2vI3kA4sGQK055U7aCVg"
            },
            "Export": {
              "Name": "sls-ChangeDeliveryStatus-dev-ChangeStatusLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-ChangeDeliveryStatus-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-ChangeDeliveryStatus-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "pythonRequirements": {
        "dockerizePip": true
      }
    },
    "plugins": [
      "serverless-python-requirements"
    ],
    "pluginsData": {},
    "functions": {
      "startDelivery": {
        "handler": "handler.start",
        "events": [
          {
            "httpApi": {
              "path": "/start",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/start"
          }
        ],
        "name": "ChangeDeliveryStatus-dev-startDelivery",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.7",
        "vpc": {},
        "versionLogicalId": "StartDeliveryLambdaVersionEiGjNuQ1K3NydqoeONQrs243IBy1Mqdy5CYhOKRVID4"
      },
      "endDelivery": {
        "handler": "handler.end",
        "events": [
          {
            "httpApi": {
              "path": "/end",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/end"
          }
        ],
        "name": "ChangeDeliveryStatus-dev-endDelivery",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.7",
        "vpc": {},
        "versionLogicalId": "EndDeliveryLambdaVersion4C4DwhkkPstpOKu7VetdwgwuREdporZBHQnIa3GBaQ"
      },
      "changeStatus": {
        "handler": "handler.changeStatus",
        "events": [
          {
            "sqs": {
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][4][\"Resource\"][0]"
              }
            }
          }
        ],
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ChangeStatusLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ChangeStatusLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "name": "ChangeDeliveryStatus-dev-changeStatus",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.7",
        "versionLogicalId": "ChangeStatusLambdaVersionJxnvEML46Onu8BXBhtW9yTM2vI3kA4sGQK055U7aCVg"
      }
    },
    "resources": {
      "Resources": {
        "changeStatus": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "changeStatus"
          }
        },
        "SnsSubscription": {
          "Type": "AWS::SNS::Subscription",
          "Properties": {
            "Protocol": "sqs",
            "Endpoint": {
              "Fn::GetAtt": [
                "changeStatus",
                "Arn"
              ]
            },
            "TopicArn": "arn:aws:sns:ap-northeast-2:889058321615:DeliveryStatusChange"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "ChangeDeliveryStatus",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/home/devops/devops-01-final-TeamC-Scenario-02/lambda/changeDeliveryStatus/.serverless/ChangeDeliveryStatus.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/ChangeDeliveryStatus/dev/1654163338024-2022-06-02T09:48:58.024Z",
    "artifact": "ChangeDeliveryStatus.zip"
  }
}